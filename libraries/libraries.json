[
  {
    "id": "validatorfx",
    "name": "ValidatorFX",
    "summary": "Form validation made easy.",
    "tags": "validation",
    "description": "A validation library for JavaFX",
    "documentation": "https://github.com/effad/ValidatorFX#readme",
    "repository": "https://github.com/effad/ValidatorFX",
    "license": "BSD3",
    "homepage": "",
    "javadocs": "",
    "githubAccount": "effad",
    "githubProject": "ValidatorFX",
    "readme": "README.md",
    "issueTracker": "https://github.com/effad/ValidatorFX/issues",
    "createdOn": "2021-11-11",
    "modifiedOn": "2021-11-11",
    "groupId": "net.synedra",
    "artifactId": "validatorfx",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "id": "materialfx",
    "name": "MaterialFX",
    "summary": "Controls based on Google's Material design.",
    "tags": "material, skin, stylesheet, style, design",
    "description": "A library of material components for JavaFX.",
    "documentation": "https://github.com/palexdev/MaterialFX#readme",
    "repository": "https://github.com/palexdev/MaterialFX",
    "license": "LGPL",
    "homepage": "",
    "javadocs": "",
    "githubAccount": "palexdev",
    "githubProject": "MaterialFX",
    "readme": "README.md",
    "issueTracker": "https://github.com/palexdev/MaterialFX/issues",
    "createdOn": "2021-11-10",
    "modifiedOn": "2021-11-10",
    "groupId": "io.github.palexdev",
    "artifactId": "materialfx",
    "logoAvailable": "false",
    "ensemble": "false",
    "videoIds": [
      "Pf--fVK6hs8"
    ]
  },
  {
    "id": "animatefx",
    "name": "AnimateFX",
    "summary": "Easy to use animations.",
    "tags": "animation",
    "description": "A library of +70 ready-to-use animations for JavaFX",
    "documentation": "https://github.com/Typhon0/AnimateFX/#readme",
    "repository": "https://github.com/Typhon0/AnimateFX",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "githubAccount": "Typhon0",
    "githubProject": "AnimateFX",
    "readme": "README.md",
    "issueTracker": "https://github.com/Typhon0/AnimateFX/issues",
    "createdOn": "2021-11-10",
    "modifiedOn": "2021-11-10",
    "groupId": "io.github.typhon0",
    "artifactId": "AnimateFX",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "id": "gluonmaps",
    "name": "Gluon Maps",
    "summary": "Map control for using OpenStreetMaps data.",
    "tags": "map, openstreetmap",
    "description": "Map control for using OpenStreetMaps data.",
    "documentation": "",
    "repository": "https://github.com/gluonhq/maps",
    "license": "GPL",
    "homepage": "https://gluonhq.com/labs/maps/",
    "javadocs": "",
    "githubAccount": "gluonhq",
    "githubProject": "maps",
    "readme": "README.md",
    "issueTracker": "https://github.com/gluonhq/maps/issues",
    "createdOn": "2021-11-10",
    "modifiedOn": "2021-11-10",
    "groupId": "com.gluonhq",
    "artifactId": "maps",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "id": "bootstrapfx",
    "name": "BootstrapFX",
    "summary": "Bootstrap for JavaFX",
    "tags": "bootstrap, custom controls, web",
    "description": "BootstrapFX is a partial port of [Twitter Bootsrap](http://getbootstrap.com) for JavaFX. It mainly provides a CSS stylesheet that closely resembles the original while being custom tailored for JavaFX's unique CSS flavor.\n\nIt's worth mentioning that Twitter Bootstrap delivers more than just a standardized look for common widgets. It also provides new widgets, behavior and a grid system. Some of these features may be ported at a later stage to BootstrapFX.",
    "documentation": "https://github.com/kordamp/bootstrapfx/#readme",
    "repository": "https://github.com/kordamp/bootstrapfx",
    "license": "MIT",
    "homepage": "",
    "javadocs": "",
    "githubAccount": "kordamp",
    "githubProject": "bootstrapfx",
    "readme": "README.adoc",
    "issueTracker": "https://github.com/kordamp/bootstrapfx/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "org.kordamp.bootstrapfx",
    "artifactId": "bootstrapfx-core",
    "logoAvailable": "false",
    "ensemble": "true"
  },
  {
    "id": "calendarfx",
    "name": "CalendarFX",
    "summary": "Professional calendar UIs",
    "tags": "calendar, custom controls",
    "description": "Professional calendar UIs",
    "documentation": "https://dlsc.com/wp-content/html/calendarfx/manual.html",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/CalendarFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "CalendarFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/CalendarFX/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.calendarfx",
    "artifactId": "calendar",
    "logoAvailable": "true",
    "ensemble": "false"
  },
  {
    "id": "desktoppanefx",
    "name": "DesktopPaneFX",
    "summary": "Am MDI solution for JavaFX applications.",
    "tags": "desktop, mdi, jdesktoppane",
    "description": "DesktopPaneFX is a JavaFX version of Swing’s JDesktopPane which can be used as a container for individual child nodes similar to JInternalFrames.",
    "documentation": "https://github.com/kordamp/desktoppanefx#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/kordamp/desktoppanefx",
    "githubAccount": "kordamp",
    "githubProject": "desktoppanefx",
    "issueTracker": "https://github.com/kordamp/desktoppanefx/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "org.kordamp.desktoppanefx",
    "artifactId": "desktoppanefx-core",
    "logoAvailable": "false",
    "ensemble": "false",
    "videoIds": [
      "gUPLJh05b3w"
    ]
  },
  {
    "name": "FlexGanttFX",
    "summary": "Professional scheduling user interfaces.",
    "tags": "gantt chart, chart, mes, scheduling, planning",
    "description": "FlexGanttFX is a scheduling and resource planning component for JavaFX. It allows developers to customize every single aspect of its appearance and behaviour via CSS and the use of pluggable renderers and editing policies. FlexGanttFX utilizes a perfect mix of scene graph / scene nodes and canvas API to ensure that even the largest data sets can be rendered quickly.\n\nFlexGanttFX is not just pretty on the outside but also on the inside. A lot of work went into the API to make it as intuitive to use by developers as the UI is by the users. FlexGanttFX is ideal for project planning (resources, people, tasks), ERP systems, production planning and scheduling applications, manufacturing execution systems or project portfolio management applications.",
    "documentation": "https://flexgantt.atlassian.net/wiki/spaces/FFXMAN/overview",
    "license": "COMMERCIAL",
    "homepage": "https://www.flexganttfx.com",
    "javadocs": "https://www.flexganttfx.com/api/index.html",
    "repository": "",
    "githubAccount": "",
    "githubProject": "",
    "issueTracker": "",
    "id": "flexganttfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "logoAvailable": "true",
    "ensemble": "true",
    "videoIds": [
      "v4GkjST64Hk",
      "Qju5_JYR8nY",
      "RN_Pcu8ssQc",
      "d-oxGpUkFe4",
      "jzy4b5GxkRA"
    ]
  },
  {
    "name": "FormsFX",
    "summary": "A framework for creating form-based UIs",
    "tags": "form, forms, validation, custom controls, framework",
    "description": "Creating forms in JavaFX is a tedious and very error-prone task. FormsFX is a framework which solves this problem. It enables the developer to create forms with ease and creates well-designed and user-friendly forms by default. FormsFX offers a fluent API that is very easy to understand and reduces the amount of coding needed. It creates all the necessary bindings for the properties and *it just works*.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/FormsFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/FormsFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "FormsFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/FormsFX/issues",
    "id": "formsfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.formsfx",
    "artifactId": "formsfx-core",
    "logoAvailable": "true",
    "ensemble": "false"
  },
  {
    "name": "FXGraphics2D",
    "summary": "A JavaFX library that allows Java2D code (Graphics2D) to be used to draw to a Canvas node.",
    "tags": "graphics, Java2D",
    "description": "FXGraphics2D is an implementation of Java's Graphics2D API that targets the JavaFX Canvas. It makes it possible to reuse existing Java2D code in a JavaFX application.",
    "documentation": "https://github.com/jfree/fxgraphics2d/blob/master/README.md",
    "license": "BSD3",
    "homepage": "https://www.jfree.org/fxgraphics2d",
    "javadocs": "https://www.javadoc.io/doc/org.jfree/org.jfree.fxgraphics2d/latest/index.html",
    "repository": "https://github.com/jfree/fxgraphics2d",
    "githubAccount": "jfree",
    "githubProject": "fxgraphics2d",
    "issueTracker": "https://github.com/jfree/fxgraphics2d/issues",
    "id": "fxgraphics2d",
    "createdOn": "2021-08-28",
    "modifiedOn": "2021-08-28",
    "groupId": "org.jfree",
    "artifactId": "org.jfree.fxgraphics2d",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "FXGL",
    "summary": "A JavaFX game engine.",
    "tags": "game, gaming, game engine",
    "description": "A JavaFX game engine",
    "documentation": "https://github.com/AlmasB/FXGL/wiki/FXGL-11",
    "license": "MIT",
    "homepage": "http://almasb.github.io/FXGLGames/",
    "javadocs": "",
    "repository": "https://github.com/AlmasB/FXGL",
    "githubAccount": "AlmasB",
    "githubProject": "FXGL",
    "issueTracker": "https://github.com/AlmasB/FXGL/issues",
    "id": "fxgl",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.github.almasb",
    "artifactId": "fxgl",
    "ensemble": "false",
    "logoAvailable": "true",
    "tutorialIds": [
      "almastutorials"
    ],
    "videoIds": [
      "fuDQg7W0v4g"
    ]
  },
  {
    "name": "GemsFX",
    "id": "gemsfx",
    "summary": "A collection of useful and highly advanced JavaFX controls.",
    "tags": "custom controls, time picker, duration picker, photo view",
    "description": "A collection of useful and highly advanced JavaFX controls.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/GemsFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/GemsFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "GemsFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/GemsFX/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.gemsfx",
    "artifactId": "gemsfx",
    "logoAvailable": "true",
    "ensemble": "true"
  },
  {
    "name": "GMapsFX",
    "id": "gmapsfx",
    "summary": "A wrapper around the Google Map Javascript API, allowing you to use and interact with maps using a pure Java API.",
    "tags": "map, google maps, trip, custom control",
    "description": "A JavaFX wrapper for Google Maps",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/GMapsFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/GMapsFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "GMapsFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/GMapsFX/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc",
    "artifactId": "GMapsFX",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "HarmonicFX",
    "summary": "A collection of Friday Fun JavaFX components authored by Gerrit Grunwald.",
    "tags": "custom controls, tips, tricks, tiles, gauges",
    "description": "A collection of Friday Fun JavaFX components authored by Gerrit Grunwald.",
    "documentation": "https://github.com/kordamp/harmonicfx#readme",
    "license": "APACHE2",
    "homepage": "https://harmoniccode.blogspot.com/search/label/fridayfun",
    "javadocs": "",
    "repository": "https://github.com/kordamp/harmonicfx",
    "githubAccount": "kordamp",
    "githubProject": "harmonicfx",
    "companyId": "",
    "issueTracker": "https://github.com/kordamp/harmonicfx/issues",
    "id": "harmonicfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "org.kordamp.harmonicfx",
    "artifactId": "harmonicfx-core",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "Ikonli",
    "id": "ikonli",
    "summary": "Ikonli provides icon packs that can be used in Java applications. Currently Swing and JavaFX UI toolkits are supported.",
    "tags": "icons, custom controls, material design",
    "description": "Ikonli provides icon packs that can be used in Java applications. Currently Swing and JavaFX UI toolkits are supported.",
    "documentation": "https://kordamp.org/ikonli/",
    "license": "APACHE2",
    "homepage": "https://kordamp.org/ikonli/",
    "javadocs": "",
    "repository": "https://github.com/kordamp/ikonli",
    "githubAccount": "kordamp",
    "githubProject": "ikonli",
    "issueTracker": "https://github.com/kordamp/ikonli/issues",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "org.kordamp.ikonli",
    "artifactId": "ikonli-javafx",
    "logoAvailable": "false",
    "ensemble": "false",
    "downloadIds": [
      "ikonlibrowser"
    ],
    "videoIds": [
      "o5UewXgUiYY"
    ],
    "tipIds": [
      "ikonli"
    ]
  },
  {
    "id": "jmetro",
    "name": "JMetro",
    "summary": "JavaFX Theme inspired by Fluent Design (not a copy)",
    "tags": "theme, skin",
    "description": "JavaFX Theme inspired by Fluent Design (not a copy). JMetro is not a theme that tries to mimic the native Windows theme / look and feel, or a theme that is a direct copy of Fluent Design. It is rather a theme inspired by Fluent Design and adapted to fit the JavaFX SDK. There are also changes that have been made according to my personal opinions on some of Fluent Design’s particularities.\n\nJMetro is composed by a set controls, stylesheets and skins.",
    "documentation": "https://pixelduke.com/java-javafx-theme-jmetro/",
    "license": "BSD3",
    "homepage": "https://pixelduke.com/java-javafx-theme-jmetro/",
    "javadocs": "",
    "repository": "https://github.com/JFXtras/jfxtras-styles",
    "githubAccount": "JFXtras",
    "githubProject": "jfxtras-styles",
    "issueTracker": "https://github.com/JFXtras/jfxtras-styles/issues",
    "createdOn": "2021-07-25",
    "modifiedOn": "2021-07-25",
    "groupId": "org.jfxtras",
    "artifactId": "jmetro",
    "logoAvailable": "false",
    "ensemble": "false",
    "videoIds": [
      "p5YSB8mza94",
      "Ihrtn0N7yMs",
      "U7wdvhRKEiY"
    ]
  },
  {
    "name": "JSilhouette",
    "summary": "Additional shapes.",
    "tags": "shapes, custom controls",
    "description": "JSilhouette provides additional shapes for Java applications.",
    "documentation": "https://kordamp.org/jsilhouette/",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "https://kordamp.org/jsilhouette/api/org.kordamp.jsilhouette.javafx/module-summary.html",
    "repository": "https://github.com/kordamp/jsilhouette",
    "githubAccount": "kordamp",
    "githubProject": "jsilhouette",
    "issueTracker": "https://github.com/kordamp/jsilhouette/issues",
    "id": "jsilhouette",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "org.kordamp.jsilhouette",
    "artifactId": "jsilhouette-javafx",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "KeyboardFX",
    "summary": "An on-screen virtual keyboard.",
    "tags": "keyboard, ipad, on-screen, custom control",
    "description": "This library provides an on-screen virtual keyboard that allows the user to enter data into text fields or text text areas via touch gestures. The default design of the keyboard mimics the appearance as it can be found on iPads. However, by customizing the CSS files it is possible to achieve pretty much any desired look.\n\nThe controls not only allow the customization of the graphical attributes of the keys but also of the availability of the keys. Developers can choose to have any number of keys showing at any time, allowing them to create different keyboards for different use cases.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/KeyboardFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/KeyboardFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "KeyboardFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/KeyboardFX/issues",
    "id": "keyboardfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.keyboardfx",
    "artifactId": "keyboardfx",
    "logoAvailable": "false",
    "ensemble": "false",
    "videoIds": [
      "nZ01ffBOW7U"
    ]
  },
  {
    "name": "LibRawFX",
    "summary": "Adds raw file formats to the image class.",
    "tags": "libraw, custom image formats",
    "description": "Integration of LibRaw (https://www.libraw.org) library for JavaFX for all major operating systems (Linux, Windows, OSX). All raw formats can be loaded with the Image class and manipulated by Pixelwriter/Pixelreader. Limitation is that the image class only supports 8-bit color deph but converts all 16bit image format to 8bit automatically.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/LibRawFX#readme",
    "license": "LGPL-2.1",
    "homepage": "http://www.librawfx.org",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/LibRawFX",
    "githubAccount": "lanthale",
    "githubProject": "LibRawFX",
    "issueTracker": "https://github.com/lanthale/LibRawFX/issues",
    "id": "librawfx",
    "createdOn": "2021-11-11",
    "modifiedOn": "2021-11-11",
    "groupId": "org.librawfx",
    "artifactId": "LibRawFX",
    "logoAvailable": "false",
    "ensemble": "true",
    "videoIds": [
      "oyV9q720F9s"
    ]
  },
  {
    "name": "PDFViewFX",
    "summary": "A viewer for PDF files.",
    "tags": "pdf viewer, custom control",
    "description": "The primary view control in this library allows applications to display any PDF file inside their JavaFX application. The view is based on the Apache PDFBox project, which is a very powerful PDF implementation and capable of displaying most PDF files and most PDF features. For more information please consult the [PDFBox homepage.](https://pdfbox.apache.org)",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/PDFViewFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/PDFViewFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "PDFViewFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/PDFViewFX/issues",
    "id": "pdffx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.pdfviewfx",
    "artifactId": "pdfviewfx",
    "logoAvailable": "false",
    "ensemble": "true",
    "videoIds": [
      "oyV9q720F9s"
    ]
  },
  {
    "name": "PreferencesFX",
    "summary": "A framework for creating application preferences UIs",
    "tags": "preferences, custom controls, framework",
    "description": "Creating preference dialogs is a tedious and very error-prone task. PreferencesFX is a framework which solves this problem. It enables the developer to create preference dialogs with ease and creates well-designed and user-friendly preference dialogs by default.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/PreferencesFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/PreferencesFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "PreferencesFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/PreferencesFX/issues",
    "id": "preferencesfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.preferencesfx",
    "artifactId": "preferencesfx-core",
    "logoAvailable": "true",
    "ensemble": "false"
  },
  {
    "name": "RichTextFX",
    "summary": "A base for rich-text editors and code editors with syntax highlighting",
    "tags": "custom controls, richtext editor",
    "description": "RichTextFX provides a memory-efficient text area that allows the developer to style ranges of text and display custom objects in-line (no more HTMLEditor).",
    "documentation": "https://github.com/FXMisc/RichTextFX#readme",
    "license": "BSD2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/FXMisc/RichTextFX",
    "githubAccount": "FXMisc",
    "githubProject": "RichTextFX",
    "issueTracker": "https://github.com/FXMisc/RichTextFX/issues",
    "id": "richtextfx",
    "createdOn": "2021-10-26",
    "modifiedOn": "2021-10-26",
    "groupId": "org.fxmisc.richtext",
    "artifactId": "richtextfx",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "UnitFX",
    "summary": "Unit of measure (UOM) framework.",
    "tags": "units of measure, framework, custom controls, input fields",
    "description": "UnitFX is a lightweight framework for creating text field input controls specific for a given *unit of measure* (UOM).",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/UnitFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/CalendarFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "UnitFX",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/CalendarFX/issues",
    "id": "unitfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.unitfx",
    "artifactId": "unitfx",
    "logoAvailable": "false",
    "ensemble": "false"
  },
  {
    "name": "WorkbenchFX",
    "summary": "A rich client platform for JavaFX applications.",
    "tags": "framework, rcp, rich client, modules",
    "description": "*WorkbenchFX* is an out of the box solution to build large applications from multiple views, called modules.\nIt offers a good user experience and a beautiful design.\n\nAs a developer, you often start with the views, so you can quickly show your progress to your customer.\nAfter that, some questions may arise such as:\n- \"How do I bring all those views together?\"\n- \"How do I build the navigation between those views?\"\n- \"How do I establish a good user experience?\"\n\nWhen those questions appear, *WorkbenchFX* comes into play:\nWith *WorkbenchFX* you can focus on designing your views while it is building the application around them.\n\n*WorkbenchFX* scales with growing requirements.\nIn the beginning you just want to navigate through the views, but later on you probably want to use a menu or a toolbar.\nThis, too, is supported by *WorkbenchFX* and you don't have to build anything yourself.\n\nIf you still manage to outgrow the supported workbench features, you can even replace whole parts of it with your own implementations, without having to rewrite the whole workbench.",
    "documentation": "https://github.com/dlsc-software-consulting-gmbh/WorkbenchFX#readme",
    "license": "APACHE2",
    "homepage": "",
    "javadocs": "",
    "repository": "https://github.com/dlsc-software-consulting-gmbh/WorkbenchFX",
    "githubAccount": "dlsc-software-consulting-gmbh",
    "githubProject": "WorkbenchFX",
    "companyId": "dlsc",
    "issueTracker": "https://github.com/dlsc-software-consulting-gmbh/WorkbenchFX/issues",
    "id": "workbenchfx",
    "createdOn": "2021-05-18",
    "modifiedOn": "2021-05-28",
    "groupId": "com.dlsc.workbenchfx",
    "artifactId": "workbenchfx-core",
    "logoAvailable": "true",
    "ensemble": "false"
  },
  {
    "name": "Charts",
    "summary": "A library for scientific charts in JavaFX",
    "tags": "charts, rich client, chart, scientific",
    "description": "A library for creating scientific charts in JavaFX. The library comes with charts that are completely based on JavaFX canvas (for performance reasons).",
    "documentation": "https://github.com/HanSolo/charts/wiki",
    "license": "APACHE2",
    "homepage": "https://harmoniccode.blogspot.com/search/label/chart",
    "javadocs": "",
    "repository": "https://github.com/HanSolo/charts",
    "githubAccount": "HanSolo",
    "githubProject": "charts",
    "issueTracker": "https://github.com/HanSolo/charts/issues",
    "id": "charts",
    "createdOn": "2021-06-11",
    "modifiedOn": "2021-06-11",
    "groupId": "eu.hansolo.fx",
    "artifactId": "charts",
    "ensemble": "false",
    "logoAvailable": "false",
    "videoIds": [
      "Csl0yIdqWB8",
      "C0YA8QA1K8k",
      "qaQ2Dh_0pgU",
      "gE1PJoLzMvk",
      "SX5jGJFz2-M",
      "UQGiRTNhvKU",
      "QsjigWQjc"
    ],
    "downloadIds": [
      "charts"
    ]
  },
  {
    "name": "TilesFX",
    "summary": "Tiles for developing dashboards.",
    "tags": "tiles, dashboard, rich client, chart, clock, progress, weather, countdown",
    "description": "A framework for creating tile-based dashboards. The library comes with a lot of built-in tiles and developers can add their own. TilesFX works nicely on desktop, on mobile, and in browsers.",
    "documentation": "https://github.com/HanSolo/tilesfx/wiki",
    "license": "APACHE2",
    "homepage": "https://harmoniccode.blogspot.com/search/label/tilesfx",
    "javadocs": "",
    "repository": "https://github.com/HanSolo/tilesfx",
    "githubAccount": "HanSolo",
    "githubProject": "TilesFX",
    "issueTracker": "https://github.com/HanSolo/tilesfx/issues",
    "id": "tilesfx",
    "createdOn": "2021-06-11",
    "modifiedOn": "2021-06-11",
    "groupId": "eu.hansolo",
    "artifactId": "tilesfx",
    "ensemble": "false",
    "logoAvailable": "false",
    "videoIds": [
      "OuF2BMnCjt4"
    ],
    "downloadIds": [
      "tilesfx"
    ]
  },
  {
    "name": "Medusa",
    "summary": "A JavaFX library for gauges",
    "tags": "gauges, dashboard, rich client, gauge, clock",
    "description": "A framework for creating gauges of all kinds. The library comes with a lot of built-in skins and developers can add their own. Medusa works nicely on desktop, on mobile, and in browsers.",
    "documentation": "https://github.com/HanSolo/Medusa/wiki",
    "license": "APACHE2",
    "homepage": "https://harmoniccode.blogspot.com/search/label/medusa",
    "javadocs": "",
    "githubAccount": "HanSolo",
    "githubProject": "Medusa",
    "issueTracker": "https://github.com/HanSolo/Medusa/issues",
    "id": "medusa",
    "createdOn": "2021-06-11",
    "modifiedOn": "2021-06-11",
    "groupId": "eu.hansolo",
    "artifactId": "medusa",
    "ensemble": "false",
    "logoAvailable": "false",
    "videoIds": [
      "l2ZYO4HXjLg"
    ],
    "downloadIds": [
    ]
  },
  {
    "name": "ControlsFX",
    "summary": "High quality UI controls to complement the core JavaFX distribution.",
    "tags": "actions, borders, breadcrumb, buttonbar, checkcombobox, checklistview, checktreeview, decoration, validation, fxsampler, gridview, hiddensidespane, popover, propertysheet, rangeslider, rating, toggleswitch, map",
    "description": "ControlsFX is an open source project for JavaFX that aims to provide really high quality UI controls and other tools to complement the core JavaFX distribution. It has been developed for JavaFX 8.0 and beyond, and has a guiding principle of only accepting new controls / features when all existing code is at an acceptably high level, including thankless jobs like having high quality javadoc documentation. This ensure a high quality release is available at all times, with all experimental work being done in branches of the main code base.",
    "documentation": "https://github.com/controlsfx/controlsfx/wiki/ControlsFX-Features",
    "license": "APACHE2",
    "homepage": "https://controlsfx.github.io",
    "javadocs": "https://controlsfx.github.io/javadoc/11.1.0/index.html",
    "repository": "https://github.com/controlsfx/controlsfx",
    "githubAccount": "controlsfx",
    "githubProject": "controlsfx",
    "issueTracker": "https://github.com/controlsfx/controlsfx/issues",
    "id": "controlsfx",
    "createdOn": "2021-06-14",
    "modifiedOn": "2021-06-14",
    "groupId": "org.controlsfx",
    "artifactId": "controlsfx",
    "ensemble": "true",
    "logoAvailable": "false",
    "videoIds": [
      "pjKgPeiWc0o"
    ]
  },
  {
    "name": "MDFX",
    "summary": "Displays Markdown in pure JavaFX",
    "tags": "control, markdown, javafx",
    "description": "MDFX is a simple markdown-renderer for JavaFX. It's based on [flexmark-java](https://github.com/vsch/flexmark-java).\nThe text you are currently reading, is displayed with MDFX. Most of the text in JFXCentral use MDFX to display richtext. \nIt is used to render the [documentation for jpro](https://www.jpro.one/?page=docs/current/1.1/) at [jpro.one](https://www.jpro.one/).",
    "license": "APACHE2",
    "homepage": "https://github.com/JPro-one/markdown-javafx-renderer",
    "repository": "https://github.com/JPro-one/markdown-javafx-renderer",
    "githubAccount": "JPro-one",
    "githubProject": "markdown-javafx-renderer",
    "issueTracker": "https://github.com/JPro-one/markdown-javafx-renderer/issues",
    "id": "mdfx",
    "createdOn": "2021-07-16",
    "modifiedOn": "2021-07-16",
    "ensemble": "false",
    "logoAvailable": "false"
  }
]
